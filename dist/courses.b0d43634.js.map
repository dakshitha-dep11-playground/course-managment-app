{"mappings":"ACAA,MAAM,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAiB,SAAS,aAAa,CAAC,oBACxC,EAAY,SAAS,aAAa,CAAC,YACnC,EAAa,SAAS,aAAa,CAAC,UA4C1C,SAAS,EAAa,CAAM,EAExB,IAAM,EAAQ,SAAS,aAAa,CAAC,KACrC,CAAA,EAAM,EAAE,CAAG,CAAC,GAAG,EAAE,EAAO,EAAE,CAAC,CAAC,CAC5B,EAAM,SAAS,CAAG,CAAC;oBACH,EAAE,EAAO,EAAE,CAAC;QACxB,EAAE,EAAO,IAAI,CAAC;QACd,EAAE,EAAO,gBAAgB,CAAC;;IAE9B,CAAC,CACD,EAAW,MAAM,CAAC,EACtB,CAGI,QAAQ,GAAG,CAAC,oBACE,MAAM,gCAAiC,CACjD,OAAQ,KACZ,GAAG,IAAI,CAAC,AAAC,IAEc,MAAf,EAAI,MAAM,GACV,QAAQ,GAAG,CAAC,GACZ,EAAI,IAAI,GAAG,IAAI,CAAC,AAAA,IACZ,EAAW,OAAO,CAAC,AAAA,IACf,EAAa,EACjB,EACJ,GACA,EAAe,KAAK,CAAG,GACvB,EAAW,KAAK,CAAG,GACnB,EAAW,KAAK,GAExB,GAAG,KAAK,CAAC,AAAA,IACL,QAAQ,GAAG,CAAC,GACZ,MAAM,yBACV,GAxEJ,EAAU,gBAAgB,CAAC,QAAS,KAChC,IAAM,EAAW,EAAe,KAAK,CAAC,IAAI,GACpC,EAAO,EAAW,KAAK,CAAC,IAAI,GAClC,GAAI,CAAC,SAAS,IAAI,CAAC,GAAW,CAC1B,EAAe,MAAM,GACrB,EAAe,KAAK,GACpB,MACJ,CAEA,GAAI,CAAC,gBAAgB,IAAI,CAAC,GAAO,CAC7B,EAAW,MAAM,GACjB,EAAW,KAAK,GAChB,MACJ,CACA,MAAM,gCAAiC,CACnC,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CACjB,KAAQ,EACN,iBAAoB,CAC1B,EAEJ,GAAG,IAAI,CAAC,AAAC,IACc,MAAf,EAAI,MAAM,GACV,QAAQ,GAAG,CAAC,GACZ,EAAI,IAAI,GAAG,IAAI,CAAC,AAAA,GAAU,EAAa,IAAS,KAAK,CAAC,AAAA,IAClD,MAAM,QACV,GACA,EAAe,KAAK,CAAG,GACvB,EAAW,KAAK,CAAG,GACnB,EAAW,KAAK,GAExB,GAAG,KAAK,CAAC,AAAA,IACL,MAAM,yBACV,EACJ,GAsCA,SAAS,aAAa,CAAC,UAAU,gBAAgB,CAAC,QAAQ,AAAC,IAEvD,GADA,QAAQ,GAAG,CAAC,EAAE,MAAM,EAAE,SACnB,EAAE,MAAM,EAAE,UAAY,SAAS,CAE9B,IAAM,EAAa,AADA,EAAE,MAAM,EAAE,QAAQ,MACP,EAAE,CAAC,SAAS,CAAC,GAG3C,MAAM,CAAC,8BAA8B,EAAE,EAAW,CAAC,CAAC,CAChD,OAAO,QACX,GAAG,IAAI,CAAC,AAAC,IACL,QAAQ,GAAG,CAAC,GACI,MAAb,EAAI,MAAM,EACT,QAAQ,GAAG,CAAC,eAEhB,QAAQ,GAAG,CAAC,iBAChB,GAAG,KAAK,CAAC,AAAC,IACN,QAAQ,GAAG,CAAC,aAChB,GAAG,OAAO,CAAC,KACP,QAAQ,GAAG,CAAC,UAChB,GACA,QAAQ,GAAG,CAAC,EAEhB,CACJ","sources":["<anon>","src/js/course.js"],"sourcesContent":["var $a0fc0231e33897c2$exports = {};\nconst $a0fc0231e33897c2$var$txtNameElm = document.querySelector(\"#course-name\");\nconst $a0fc0231e33897c2$var$txtDurationElm = document.querySelector(\"#course-duration\");\nconst $a0fc0231e33897c2$var$btnAddElm = document.querySelector(\"#btn-add\");\nconst $a0fc0231e33897c2$var$tblBodyElm = document.querySelector(\"#tbody\");\n$a0fc0231e33897c2$var$loadAllCourses();\n$a0fc0231e33897c2$var$btnAddElm.addEventListener(\"click\", ()=>{\n    const duration = $a0fc0231e33897c2$var$txtDurationElm.value.trim();\n    const name = $a0fc0231e33897c2$var$txtNameElm.value.trim();\n    if (!/\\d{1,}/.test(duration)) {\n        $a0fc0231e33897c2$var$txtDurationElm.select();\n        $a0fc0231e33897c2$var$txtDurationElm.focus();\n        return;\n    }\n    if (!/[A-Za-z ]{3,}/.test(name)) {\n        $a0fc0231e33897c2$var$txtNameElm.select();\n        $a0fc0231e33897c2$var$txtNameElm.focus();\n        return;\n    }\n    fetch(\"http://localhost:8080/courses\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"name\": name,\n            \"durationInMonths\": duration\n        })\n    }).then((res)=>{\n        if (res.status === 201) {\n            console.log(res);\n            res.json().then((course)=>$a0fc0231e33897c2$var$createNewRow(course)).catch((err)=>{\n                alert(\"error\");\n            });\n            $a0fc0231e33897c2$var$txtDurationElm.value = \"\";\n            $a0fc0231e33897c2$var$txtNameElm.value = \"\";\n            $a0fc0231e33897c2$var$txtNameElm.focus();\n        }\n    }).catch((err)=>{\n        alert(\"Error in saving course\");\n    });\n});\nfunction $a0fc0231e33897c2$var$createNewRow(course) {\n    // console.log(course);\n    const trElm = document.createElement(\"tr\");\n    trElm.id = `tr-${course.id}`;\n    trElm.innerHTML = `\n    <td scope=\"row\">${course.id}</td>\n    <td>${course.name}</td>\n    <td>${course.durationInMonths}</td>\n    <td><button type=\"button\" class=\"btn btn-danger\">Delete <i class=\"bi bi-trash-fill\"></i></button></td>\n    `;\n    $a0fc0231e33897c2$var$tblBodyElm.append(trElm);\n}\nfunction $a0fc0231e33897c2$var$loadAllCourses() {\n    console.log(\"Load All Courses\");\n    const promise = fetch(\"http://localhost:8080/courses\", {\n        method: \"GET\"\n    }).then((res)=>{\n        if (res.status === 200) {\n            console.log(res);\n            res.json().then((courseList)=>{\n                courseList.forEach((course)=>{\n                    $a0fc0231e33897c2$var$createNewRow(course);\n                });\n            });\n            $a0fc0231e33897c2$var$txtDurationElm.value = \"\";\n            $a0fc0231e33897c2$var$txtNameElm.value = \"\";\n            $a0fc0231e33897c2$var$txtNameElm.focus();\n        }\n    }).catch((err)=>{\n        console.log(err);\n        alert(\"Error in saving course\");\n    });\n}\ndocument.querySelector(\"#tbody\").addEventListener(\"click\", (e)=>{\n    console.log(e.target?.tagName);\n    if (e.target?.tagName === \"BUTTON\") {\n        const deletingTR = e.target?.closest(\"tr\");\n        const deletingID = deletingTR.id.substring(3);\n        fetch(`http://localhost:8080/courses/${deletingID}`, {\n            method: \"DELETE\"\n        }).then((res)=>{\n            console.log(res);\n            if (res.status === 204) console.log(\"We are good\");\n            console.log(\"something else\");\n        }).catch((err)=>{\n            console.log(\"We are bad\");\n        }).finally(()=>{\n            console.log(\"finally\");\n        });\n        console.log(deletingID);\n    }\n});\n\n\n//# sourceMappingURL=courses.b0d43634.js.map\n","const txtNameElm = document.querySelector('#course-name');\nconst txtDurationElm = document.querySelector('#course-duration');\nconst btnAddElm = document.querySelector('#btn-add');\nconst tblBodyElm = document.querySelector('#tbody');\n\nloadAllCourses();\n\n\nbtnAddElm.addEventListener('click', () => {\n    const duration = txtDurationElm.value.trim();\n    const name = txtNameElm.value.trim();\n    if (!/\\d{1,}/.test(duration)) {\n        txtDurationElm.select();\n        txtDurationElm.focus();\n        return;\n    }\n\n    if (!/[A-Za-z ]{3,}/.test(name)) {\n        txtNameElm.select();\n        txtNameElm.focus();\n        return;\n    }\n    fetch('http://localhost:8080/courses', {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"name\": name\n            , \"durationInMonths\": duration\n        })\n\n    }).then((res) => {\n        if (res.status === 201) {\n            console.log(res);\n            res.json().then(course => createNewRow(course)).catch(err=>{\n                alert('error');\n            })\n            txtDurationElm.value = \"\";\n            txtNameElm.value = \"\";\n            txtNameElm.focus();\n        }\n    }).catch(err => {\n        alert('Error in saving course');\n    })\n})\n\nfunction createNewRow(course) {\n    // console.log(course);\n    const trElm = document.createElement('tr');\n    trElm.id = `tr-${course.id}`\n    trElm.innerHTML = `\n    <td scope=\"row\">${course.id}</td>\n    <td>${course.name}</td>\n    <td>${course.durationInMonths}</td>\n    <td><button type=\"button\" class=\"btn btn-danger\">Delete <i class=\"bi bi-trash-fill\"></i></button></td>\n    `\n    tblBodyElm.append(trElm)\n}\n\nfunction loadAllCourses(){\n    console.log(\"Load All Courses\");\n   const promise= fetch('http://localhost:8080/courses', {\n        method: 'GET',\n    }).then((res) => {\n        \n        if (res.status === 200) {\n            console.log(res);\n            res.json().then(courseList => {\n                courseList.forEach(course => {\n                    createNewRow(course);\n                });\n            })\n            txtDurationElm.value = \"\";\n            txtNameElm.value = \"\";\n            txtNameElm.focus();\n        }\n    }).catch(err => {\n        console.log(err);\n        alert('Error in saving course');\n    })\n};\n\ndocument.querySelector('#tbody').addEventListener('click',(e)=>{\n    console.log(e.target?.tagName);\n    if(e.target?.tagName === 'BUTTON'){\n       const deletingTR =  e.target?.closest('tr');\n        const deletingID = deletingTR.id.substring(3);\n        \n        \n        fetch(`http://localhost:8080/courses/${deletingID}`,{\n            method:'DELETE'\n        }).then((res)=>{\n            console.log(res);\n            if(res.status===204){\n                console.log('We are good');\n            }\n            console.log(\"something else\");\n        }).catch((err)=>{\n            console.log(\"We are bad\");\n        }).finally(()=>{\n            console.log(\"finally\");\n        })\n        console.log(deletingID);\n\n    }\n})"],"names":["$a0fc0231e33897c2$var$txtNameElm","document","querySelector","$a0fc0231e33897c2$var$txtDurationElm","$a0fc0231e33897c2$var$btnAddElm","$a0fc0231e33897c2$var$tblBodyElm","$a0fc0231e33897c2$var$createNewRow","course","trElm","createElement","id","innerHTML","name","durationInMonths","append","console","log","fetch","method","then","res","status","json","courseList","forEach","value","focus","catch","err","alert","addEventListener","duration","trim","test","select","headers","body","JSON","stringify","e","target","tagName","deletingID","deletingTR","closest","substring","finally"],"version":3,"file":"courses.b0d43634.js.map"}